EJERCICIO1ConsultaApi.js

fetch(`https://rickandmortyapi.com/api/character`)
    .then(response => response.json())
    .then(data => {
        const primerPersonaje = data.results[0].name;
        console.log('El primer personaje es: ', primerPersonaje);
    })
    .catch(error => {
        console.error('Ocurrio un error al hacer la solicitud ', error.message);
    });

EJERCICICO 2
// Ejercicio 2: Obtener Información de un Pokémon Específico


async function fetchPokemon(){
    try{
        const response = await fetch(`https://pokeapi.co/api/v2/pokemon/1`);
        if(!response.ok) throw new Error('El pokemon no fue encontrado');
        const pokemon = await response.json();
        console.log(pokemon);
    }catch(error){
        console.log(error);
    }

}
fetchPokemon();

EJERCICIO 3
usar parametros dinamicos con id:

const express = require('express');
const app = express();
const PORT = 3000;

app.use(express.json());

let usuarios = [
    {id: 1, name: "Nina", email: "ninacomputer@gmail.com"}, 
    {id: 2, name: "Pamela", email:"pamela@gmail.com"},
    {id: 3, name: "Alma", email:"alma@gmail.com"}
]

app.get('/', (req, res) => {
    res.status(200).send("Bienvenida al ejercicio 3 Params dinamicos");
})
app.get('/usuarios/:id', (req, res) => {
    const userId = parseInt(req.params.id);

    const user = usuarios.find(u => u.id === parseInt(userId));
    if(!user){
        res.status(404).send("User not found")
    } else {
        res.json(user);
    }
})
app.listen(PORT, () => {
    console.log(`Servidor corriendo en http://localhost:${PORT}`);
})
