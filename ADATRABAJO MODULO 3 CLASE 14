Ejercicio 1 Actualizar datos de un usuario

const express = require('express');
const app = express();
const port = 3000;

app.use(express.json());

let users = [
    {id: 1, name: "Nina", email:"ninacomputer@gmail.com"},
    {id: 2, name: "Pamela", email: "pamela@gmail.com"}
]
app.get('/users/', (req, res) => {
    if(users.length > 0){
        return res.status(201).json(users);
    } else {
        return res.status(404).json({error: "Aun no existen usuarios"});
    }
})
app.put('/users/:id', (req, res) => {
    const {id} = req.params;
    const {name, email} = req.body

    const userIndex = users.findIndex(user => user.id === parseInt(id));

    if(userIndex === -1){
        return res.status(404).json({error: "Usuario no encontrado"});
    }
    if(!name || !email){
        return res.status(400).json({error: "Datos incompletos. Se requiere name y email"});
    }

    users[userIndex] = {id: parseInt(id), name, email};
    res.json(users[userIndex]);
});
// Servidor en ejecución
app.listen(port, () => {
  console.log(`Servidor escuchando en http://localhost:${port}/users`);
});

EJERCICIO 2  ELIMINAR UN USUARIO 

const express = require('express');
const app = express();
const port = 3000;

app.use(express.json());

let users = [
    {id: 1, name: "Nina", email:"ninacomputer@gmail.com"},
    {id: 2, name: "Alma", email: "alma@gmail.com"}
]
app.get('/users/', (req, res) => {
    if(users.length > 0){
        return res.status(201).json(users);
    } else {
        return res.status(404).json({error: "Aun no existen usuarios"});
    }
})
app.delete('/users/:id', (req, res) => {
    const {id} = req.params;
    const index = users.findIndex(user => user.id === parseInt(id, 10));
    if(index === -1) return res.status(404).json({error: "Usuario no encontrado"});
    const deletedUser = users.splice(index, 1);
    res.status(200).json({ message: "Usuario eliminado", usuario: deletedUser[0] });
});
// Servidor en ejecución
app.listen(port, () => {
  console.log(`Servidor escuchando en http://localhost:${port}/users`);
});

EJERCICIO 3 FILTRAR USUARIOS POR NOMBRE 

const express = require('express');
const app = express();
const port = 3000;

app.use(express.json());

let users = [
    {id: 1, name: "Nina", email:"ninacomputer@gmail.com"},
    {id: 2, name: "Alma", email: "alma@gmail.com"}
]

app.get('/users/', (req, res) => {
    if(users.length > 0){
        return res.status(201).json(users);
    } else {
        return res.status(404).json({error: "Aun no existen usuarios"});
    }
})

app.get('/users/search', (req, res) => {
    const {name} = req.query;

    if(!name){
        return res.status(400).json({error: "El parametro 'name' es requerido"});
    }

    const filteredUsers = users.filter(user => 
        user.name.toLowerCase().includes(name.toLowerCase())
    );

    res.status(200).json(filteredUsers);
})
app.listen(port, () => {
    console.log(`Servidor escuchando http://localhost:3000/users/search`);
})

